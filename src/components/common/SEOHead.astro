---
import { siteConfig } from '../../data/site-config';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    author?: string;
    tags?: string[];
  };
}

const { 
  title, 
  description = siteConfig.description, 
  image = siteConfig.banner.src,
  type = 'website',
  article
} = Astro.props;

const metaTitle = title ? `${title} | ${siteConfig.title}` : `${siteConfig.title} - ${siteConfig.subtitle}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image.startsWith('http') ? image : image, Astro.site);
---

<!-- Primary Meta Tags -->
<title>{metaTitle}</title>
<meta name="title" content={metaTitle} />
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- Robots and indexing -->
<meta name="robots" content="index, follow" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={metaTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />
<meta property="og:site_name" content={siteConfig.title} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={metaTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />

<!-- Article specific tags -->
{type === 'article' && article?.publishedTime && (
  <meta property="article:published_time" content={article.publishedTime} />
)}
{type === 'article' && article?.modifiedTime && (
  <meta property="article:modified_time" content={article.modifiedTime} />
)}
{type === 'article' && article?.author && (
  <meta property="article:author" content={article.author} />
)}
{type === 'article' && article?.tags && article.tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Accessibility and theme -->
<meta name="theme-color" content={siteConfig.themeColor} />
<meta name="color-scheme" content="light dark" /> 