---
interface Props {
  project: {
    id: string
    title: string
    description: string
    technologies: string[]
    link?: string
    category: string
  }
}

const { project } = Astro.props
---

<article class="bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col h-full">
  <!-- Category Badge -->
  <div class="p-6 pb-0">
    <span class="inline-block px-3 py-1 text-xs font-medium rounded-full bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-100">
      {project.category}
    </span>
  </div>
  
  <!-- Content -->
  <div class="p-6 flex-grow">
    <h3 class="text-xl font-bold mb-3 bg-gradient-to-r from-blue-700 to-purple-700 text-transparent bg-clip-text">
      {project.title}
    </h3>
    <p class="text-gray-800 dark:text-gray-100 mb-4 line-clamp-3">
      {project.description}
    </p>
    
    <!-- Technologies -->
    <div class="flex flex-wrap gap-2 mb-4">
      {project.technologies.slice(0, 4).map(tech => (
        <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-100 rounded-full text-xs font-medium">
          {tech}
        </span>
      ))}
      {project.technologies.length > 4 && (
        <span class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-100 rounded-full text-xs font-medium">
          +{project.technologies.length - 4} more
        </span>
      )}
    </div>
  </div>
  
  <!-- Footer -->
  <div class="pt-2 pb-6 px-6 mt-auto">
    <a 
      href={`/projects/${project.id}`}
      class="inline-flex items-center text-blue-700 dark:text-blue-300 hover:text-blue-900 dark:hover:text-blue-200 font-medium transition-all"
      aria-label={`View details about ${project.title}`}
    >
      View Project Details
      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-1" viewBox="0 0 24 24">
        <path fill="currentColor" d="M16.01 11H4v2h12.01v3L20 12l-3.99-4z"/>
      </svg>
    </a>
  </div>
</article>

<style>
  article {
    position: relative;
    overflow: hidden;
  }
  
  article::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, #1d4ed8, #7e22ce);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  article:hover::before {
    opacity: 1;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>