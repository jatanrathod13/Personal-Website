---
import BaseLayout from '../../layouts/BaseLayout.astro'
import OptimizedImage from '../../components/common/OptimizedImage.astro'
import { siteConfig } from '../../data/site-config'
import { blogPosts } from '../../data'

// Define getStaticPaths to generate all possible routes
export async function getStaticPaths() {
  return blogPosts.map(post => ({
    params: { id: post.id },
    props: { post },
  }));
}

const { id } = Astro.params;
const { post } = Astro.props;

// Validate post exists
if (!post) {
  return Astro.redirect('/404');
}

// Use a different variable name for the page title
const postTitle = `${post.title} | Blog | ${siteConfig.title}`;

// Get related posts with better filtering
const relatedPosts = blogPosts
  .filter(p => p.id !== post.id && (
    p.category === post.category || 
    p.tags?.some(tag => post.tags?.includes(tag))
  ))
  .slice(0, 3);

// Ensure title is always a string
const pageTitle = `${post.title} | Blog | ${siteConfig.title}`
---

<BaseLayout title={postTitle} description={post.description} setOGTypeArticle={true}>
  <article class="max-w-4xl mx-auto px-4 py-12">
    <header class="mb-12">
      <div class="flex items-center gap-4 mb-4">
        <span class="text-blue-600 dark:text-blue-400">{post.category}</span>
        <span class="text-gray-500">{post.date}</span>
        <span class="text-gray-500">{post.readTime}</span>
      </div>
      
      <h1 class="text-4xl font-bold mb-6">{post.title}</h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 mb-8">{post.description}</p>
      
      <OptimizedImage 
        src={post.image} 
        alt={post.title}
        class="w-full h-[400px] rounded-xl" 
        fallback="/images/blog-placeholder.jpg"
      />
    </header>

    <div class="prose prose-lg dark:prose-invert max-w-none">
      {post.content}
    </div>
  </article>

  {relatedPosts.length > 0 && (
    <section class="bg-gray-50 dark:bg-gray-800 py-12">
      <div class="max-w-4xl mx-auto px-4">
        <h2 class="text-2xl font-bold mb-8">Related Posts</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {relatedPosts.map(relatedPost => (
            <a href={`/blog/${relatedPost.id}`} class="block">
              <div class="bg-white dark:bg-gray-700 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition">
                <img 
                  src={relatedPost.image} 
                  alt={relatedPost.title}
                  class="w-full h-48 object-cover"
                />
                <div class="p-4">
                  <h3 class="font-bold mb-2">{relatedPost.title}</h3>
                  <p class="text-sm text-gray-600 dark:text-gray-300">{relatedPost.description}</p>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  )}
</BaseLayout> 