---
import BaseLayout from '../../layouts/BaseLayout.astro'
import { siteConfig } from '../../config'

// In a real site, this would come from a CMS or markdown files
const blogPosts = [
  {
    id: 1,
    title: 'Building Scalable Data Pipelines with Apache Airflow',
    excerpt: 'Learn how to design and implement robust data pipelines using Apache Airflow, with best practices for monitoring and maintenance.',
    content: `
      <p>Data pipelines are the backbone of modern data infrastructure. In this comprehensive guide, we'll explore how to build scalable and maintainable data pipelines using Apache Airflow.</p>

      <h2>Why Apache Airflow?</h2>
      <p>Apache Airflow has become the de-facto standard for workflow management in data engineering. Its key advantages include:</p>
      <ul>
        <li>Python-based DAG definitions</li>
        <li>Rich ecosystem of operators</li>
        <li>Built-in monitoring and logging</li>
        <li>Scalable architecture</li>
      </ul>

      <h2>Getting Started</h2>
      <p>Let's create a simple data pipeline that:</p>
      <ol>
        <li>Extracts data from a source system</li>
        <li>Transforms the data</li>
        <li>Loads it into a target system</li>
      </ol>

      <pre><code class="language-python">
from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime, timedelta

default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2024, 1, 1),
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

dag = DAG(
    'data_pipeline',
    default_args=default_args,
    description='A simple data pipeline',
    schedule_interval=timedelta(days=1),
)

def extract_data():
    # Your extraction logic here
    pass

def transform_data():
    # Your transformation logic here
    pass

def load_data():
    # Your loading logic here
    pass

extract_task = PythonOperator(
    task_id='extract_data',
    python_callable=extract_data,
    dag=dag,
)

transform_task = PythonOperator(
    task_id='transform_data',
    python_callable=transform_data,
    dag=dag,
)

load_task = PythonOperator(
    task_id='load_data',
    python_callable=load_data,
    dag=dag,
)

extract_task >> transform_task >> load_task
      </code></pre>

      <h2>Best Practices</h2>
      <p>When building data pipelines with Airflow, consider these best practices:</p>
      <ul>
        <li>Use meaningful task names</li>
        <li>Implement proper error handling</li>
        <li>Set appropriate retry policies</li>
        <li>Monitor task performance</li>
        <li>Document your DAGs</li>
      </ul>

      <h2>Monitoring and Maintenance</h2>
      <p>Regular monitoring and maintenance are crucial for pipeline reliability:</p>
      <ul>
        <li>Monitor task execution times</li>
        <li>Set up alerts for failures</li>
        <li>Regularly review logs</li>
        <li>Update dependencies</li>
      </ul>

      <h2>Conclusion</h2>
      <p>Building scalable data pipelines with Apache Airflow requires careful planning and implementation. By following these guidelines and best practices, you can create robust and maintainable data pipelines that scale with your needs.</p>
    `,
    date: '2024-03-15',
    category: 'Data Engineering',
    image: '/images/blog/airflow-pipeline.jpg',
    readTime: '8 min read',
    author: 'Jatan Rathod',
    tags: ['Apache Airflow', 'Data Engineering', 'ETL', 'Python']
  },
  // Add more blog posts here...
]

// Get the blog post ID from the URL
const { id } = Astro.params
const postId = id ? parseInt(id) : null
const post = postId ? blogPosts.find(p => p.id === postId) : null

// If post not found, redirect to 404
if (!post) {
  return Astro.redirect('/404')
}

// Get related posts (excluding current post)
const relatedPosts = blogPosts
  .filter(p => p.id !== post.id && p.category === post.category)
  .slice(0, 3)

// Ensure title is always a string
const pageTitle = `${post.title} | Blog | ${siteConfig.title}`
---

<BaseLayout title={pageTitle}>
  <!-- Hero Section -->
  <section class="relative py-20">
    <div class="absolute inset-0">
      <img
        src={post.image}
        alt={post.title}
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-gradient-to-r from-blue-900/80 to-purple-900/80"></div>
    </div>
    <div class="container mx-auto px-4 relative">
      <div class="max-w-3xl mx-auto text-center text-white">
        <div class="flex items-center justify-center gap-4 text-sm mb-4">
          <span>{post.date}</span>
          <span>•</span>
          <span>{post.readTime}</span>
        </div>
        <h1 class="text-4xl md:text-5xl font-bold mb-6">{post.title}</h1>
        <div class="flex items-center justify-center gap-4">
          <span class="text-sm font-medium">{post.author}</span>
          <span>•</span>
          <span class="text-sm font-medium">{post.category}</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Content Section -->
  <section class="py-20">
    <div class="container mx-auto px-4">
      <div class="max-w-3xl mx-auto">
        <!-- Tags -->
        <div class="flex flex-wrap gap-2 mb-8">
          {post.tags.map(tag => (
            <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-100 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>

        <!-- Main Content -->
        <div class="prose dark:prose-invert max-w-none" set:html={post.content} />

        <!-- Share Buttons -->
        <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
          <h3 class="text-lg font-semibold mb-4">Share this article</h3>
          <div class="flex gap-4">
            <button class="btn btn-outline">
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
              </svg>
              Share
            </button>
            <button class="btn btn-outline">
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
              Tweet
            </button>
            <button class="btn btn-outline">
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
              LinkedIn
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Related Posts -->
  {relatedPosts.length > 0 && (
    <section class="py-20 bg-gray-50 dark:bg-gray-800">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold mb-12 text-center ai-gradient">Related Articles</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
          {relatedPosts.map(relatedPost => (
            <article class="bg-white dark:bg-gray-700 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
              <img
                src={relatedPost.image}
                alt={relatedPost.title}
                class="w-full h-48 object-cover"
              />
              <div class="p-6">
                <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-4">
                  <span>{relatedPost.date}</span>
                  <span>•</span>
                  <span>{relatedPost.readTime}</span>
                </div>
                <h3 class="text-xl font-bold mb-2 hover:text-blue-500">
                  <a href={`/blog/${relatedPost.id}`}>{relatedPost.title}</a>
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4">
                  {relatedPost.excerpt}
                </p>
                <a
                  href={`/blog/${relatedPost.id}`}
                  class="text-sm font-medium text-blue-500 hover:text-blue-600"
                >
                  Read more →
                </a>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Newsletter Section -->
  <section class="py-20">
    <div class="container mx-auto px-4">
      <div class="max-w-2xl mx-auto text-center">
        <h2 class="text-3xl font-bold mb-4 ai-gradient">Stay Updated</h2>
        <p class="text-gray-600 dark:text-gray-300 mb-6">
          Subscribe to my newsletter for more articles on data engineering, AI, and automation.
        </p>
        <form class="flex gap-4">
          <input
            type="email"
            placeholder="Enter your email"
            class="flex-1 px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700"
          />
          <button
            type="submit"
            class="btn btn-primary"
          >
            Subscribe
          </button>
        </form>
      </div>
    </div>
  </section>

  <script>
    // Newsletter form handling
    document.querySelector('form')?.addEventListener('submit', (e) => {
      e.preventDefault()
      alert('Thank you for subscribing! You will receive updates soon.')
      ;(e.target as HTMLFormElement).reset()
    })
  </script>
</BaseLayout> 